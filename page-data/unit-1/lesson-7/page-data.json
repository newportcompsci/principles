{"componentChunkName":"component---src-templates-lesson-template-js","path":"/unit-1/lesson-7","webpackCompilationHash":"4baef041b83ace4fba13","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/unit-1/lesson-7\",\n  \"start\": \"2019-09-13T00:00:00.000Z\",\n  \"end\": \"2019-09-13T00:00:00.000Z\",\n  \"title\": \"Lesson 1.07 - Sending Text\",\n  \"slides\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = Layout;\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://studio.code.org/s/csp1-2019/stage/7/puzzle/2\"\n  }), \"Code.org Unit 1 Lesson 7\")), mdx(\"h3\", null, \"American Standard Code for Information Interchange (ASCII)\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.ibm.com/support/knowledgecenter/en/SSLTBW_2.3.0/com.ibm.zos.v2r3.ioaq100/ascii_table.gif\",\n    \"alt\": \"ASCII Chart\"\n  }))), mdx(\"h2\", null, \"Takeaways\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Binary and decimal numbers can be converted back and forth\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It's usually easier to think of representing other things, like characters, as decimal numbers first. We ignore the underlying detail that the decimal number needs to be converted to bits (binary) to actually send on a computer.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We usually only think about the underlying binary representation when we have to. For example if we have a 6-bit system we know we only can represent 64 unique patterns. If we need more characters we'll need more bits.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Something that allows us to hide or forget underlying details is called an abstraction. Today we were sending text to each other but we know under the hood that means we're just sending electrical symbols back and forth. All the different layers we've explored in this chapter (binary numbers, decimal numbers, letters) allow us to ignore or hide the complexity of sending electric symbols. This makes it easy to quickly create systems like you did today and feel confident the underlying system will work.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"path":"/unit-1/lesson-7","start":"September 13, 2019","title":"Lesson 1.07 - Sending Text","attachments":null,"slides":true}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}