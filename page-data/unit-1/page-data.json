{"componentChunkName":"component---src-templates-unit-template-js","path":"/unit-1","webpackCompilationHash":"16d82d77b5e0fdbb69a8","result":{"data":{"unit":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/unit-1\",\n  \"title\": \"Unit 1 - The Internet\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = Layout;\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Vocabulary\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Innovation\"), \": A new or improved idea, device, product, etc, or the development thereof\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Binary\"), \": A way of representing information using only two options.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Bit\"), \": A contraction of \\\"Binary Digit\\\"; the single unit of information in a computer, typically represented as a 0 or 1\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Bandwidth\"), \": Transmission capacity measure by bit rate\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Bit rate\"), \": (sometimes written bitrate) the number of bits that are conveyed or processed per unit of time. e.g. 8 bits/sec.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Latency\"), \": Time it takes for a bit to travel from its sender to its receiver.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Protocol\"), \": A set of rules governing the exchange or transmission of data between devices.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Abstraction\"), \": a simplified representation of something more complex. Abstractions allow you to hide details to help you manage complexity, focus on relevant concepts, and reason about problems at a higher level.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"ASCII\"), \": American Standard Code for Information Interchange; the universally recognized raw text format that any computer can understand\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"IETF\"), \": Internet Engineering Task Force - develops and promotes voluntary Internet standards and protocols, in particular the standards that comprise the Internet protocol suite (TCP/IP).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Internet\"), \": A group of computers and servers that are connected to each other.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Net Neutrality\"), \": the principle that all Internet traffic should be treated equally by Internet Service Providers.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"IP Address\"), \": A number assigned to any item that is connected to the Internet.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Packets\"), \": Small chunks of information that have been carefully formed from larger chunks of information.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Network Redundancy\"), \": having multiple backups to ensure reliability during cases of high usage or failure\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Router\"), \": A type of computer that forwards data across a network\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"TCP\"), \": Transmission Control Protocol - provides reliable, ordered, and error-checked delivery of a stream of packets on the internet. TCP is tightly linked with IP and usually seen as TCP/IP in writing.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"DNS\"), \": short for Domain Name System, this system translates domain names (like example.com) to IP addresses (like 93.184.216.34)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"HTTP\"), \": HyperText Transfer Protocol - the protocol used for transmitting web pages over the Internet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"URL\"), \": An easy-to-remember address for calling a web page (like www.code.org).\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Unit 1 - The Internet"}},"lessons":{"edges":[{"node":{"frontmatter":{"start":"Thu Sep 5th, 2019","title":"Lesson 1.01 - Personal Innovations","path":"/unit-1/lesson-1"}}},{"node":{"frontmatter":{"start":"Fri Sep 6th, 2019","title":"Lesson 1.02 - Sending Binary Messages","path":"/unit-1/lesson-2"}}},{"node":{"frontmatter":{"start":"Mon Sep 9th, 2019","title":"Lesson 1.03 - Sending Binary Messages with the Internet Simulator","path":"/unit-1/lesson-3"}}},{"node":{"frontmatter":{"start":"Tue Sep 10th, 2019","title":"Lesson 1.04 - Number Systems","path":"/unit-1/lesson-4"}}},{"node":{"frontmatter":{"start":"Wed Sep 11th, 2019","title":"Lesson 1.05 - Binary Numbers","path":"/unit-1/lesson-5"}}},{"node":{"frontmatter":{"start":"Wed Sep 11th, 2019","title":"Lesson 1.06 - Sending Numbers","path":"/unit-1/lesson-6"}}},{"node":{"frontmatter":{"start":"Fri Sep 13th, 2019","title":"Lesson 1.07 - Sending Text","path":"/unit-1/lesson-7"}}},{"node":{"frontmatter":{"start":"Mon Sep 16th, 2019","title":"Lesson 1.08 - The Internet is For Everyone","path":"/unit-1/lesson-8"}}},{"node":{"frontmatter":{"start":"Tue Sep 17th, 2019","title":"Lesson 1.09 - The Need For Addressing","path":"/unit-1/lesson-9"}}},{"node":{"frontmatter":{"start":"Fri Sep 20th, 2019","title":"Lesson 1.10 - Routers and Redundancy","path":"/unit-1/lesson-10"}}},{"node":{"frontmatter":{"start":"Mon Sep 23rd, 2019","title":"Lesson 1.11 - Packets and a Reliable Internet","path":"/unit-1/lesson-11"}}},{"node":{"frontmatter":{"start":"Tue Sep 24th, 2019","title":"Optional Lesson - Minimum Spanning Tree","path":"/unit-1/lesson-12"}}},{"node":{"frontmatter":{"start":"Fri Sep 27th, 2019","title":"Lesson 1.12 - The Need for DNS","path":"/unit-1/lesson-13"}}},{"node":{"frontmatter":{"start":"Mon Sep 30th, 2019","title":"Lesson 1.13 - HTTPS and Abstraction on the Internet","path":"/unit-1/lesson-14"}}},{"node":{"frontmatter":{"start":"Tue Oct 1st, 2019","title":"Lesson 1.14 - Practice Performance Task","path":"/unit-1/lesson-15"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"lessonRegex":"/unit-1\\/lesson-\\\\d+$/"}}}