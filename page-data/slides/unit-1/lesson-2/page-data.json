{"componentChunkName":"component---node-modules-gatsby-theme-mdx-deck-src-templates-deck-js","path":"/slides/unit-1/lesson-2","matchPath":"/slides/unit-1/lesson-2/*","webpackCompilationHash":"67a94922d86267027e1f","result":{"data":{"deck":{"id":"49b7c2e7-2aa3-55da-aaa4-d5d79379f0d6","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = slideTheme;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Sending Binary Messages\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Think, Pair, Share\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"What is your personal definition of \\\"information?\\\" Take a minute to write it down.\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Get into Groups of Two\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Prompt\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Imagine that you and your friend have not been able to communicate for the entire summer, and you have a chance to ask her one binary question that she will answer. What binary question do you want to ask?\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Challenge 1: Send a Binary Message\"), mdx(\"p\", null, \"You will have \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"5 minutes\"), \" to construct a device out of the provided supplies to send a simple\\nbinary message, a question with one of two possible answers (i.e., yes or no). \"), mdx(\"h3\", null, \"Rules:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Your partner will be on the opposite side of the room\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"No language (sign-language etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"No Projectiles!\"))), mdx(\"hr\", null), mdx(\"h2\", null, \"Group Discussion\"), mdx(\"p\", null, \"Would your device still work if:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"There was something in between you and your partner?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You couldn\\u2019t see your partner?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You were in a loud room?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Your partner wasn\\u2019t paying attention?\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Challenge 2: Four possible Messages\"), mdx(\"p\", null, \"Think about these things:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Should you modify your device?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Should you use it in a different way?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Should you make a new device entirely?\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Challenge 3: Eight Possible Messages\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Challenge 4: N-Possible Messages\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Our alphabet only has 26-letters, yet we can spell many words\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Our number system only has 10 digits yet we can represent many numbers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Think back to your simple two-state device. Could you simply use it differently, rather than modifying it?\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Wrap Up\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Could you use another group\\u2019s device to send your set of messages? Why or why not? What would you need to know from the other groups?\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Based on what you've seen in today's activity what do you think are the limitations on the kinds of information we can send with binary messages?\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"matchPath":"/slides/unit-1/lesson-2/*","isCreatedByStatefulCreatePages":false,"id":"49b7c2e7-2aa3-55da-aaa4-d5d79379f0d6","slug":"/principles/slides/unit-1/lesson-2","title":"Sending Binary Messages"}}}