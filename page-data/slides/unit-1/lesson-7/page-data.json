{"componentChunkName":"component---node-modules-gatsby-theme-mdx-deck-src-templates-deck-js","path":"/slides/unit-1/lesson-7","matchPath":"/slides/unit-1/lesson-7/*","webpackCompilationHash":"5f17924a525deb8fb4c6","result":{"data":{"deck":{"id":"c6481366-b4e1-55d1-950e-0c568461188f","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = slideTheme;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Sending Text\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Warm-Up\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"When we communicate on the Internet we're not usually sending numbers back and forth, we're sending text! The version of the Internet Simulator you're using only lets you send numbers, but that doesn't mean we can't figure out our own way to send text.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"We'll be doing a series of challenges. Before each one I will give you a chance to talk to your partner. Then I'll give one member of each group a short text message like the ones on the board. Your job will be to create an encoding system that will allow you to send that message. As always this will need to be done silently, with no communication except through the Internet Simulator.\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Code.org\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Navigate to Unit 1 Lesson 7, the Internet Simulator and poke around for a bit.\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Challenges\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You and your partner are going to use the system that you came up with in the warm-up to send messages back and forth. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"One of  you will be given a message and you will have to send that message using the internet simulator \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"WITHOUT\"), \" talking!\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Between each challenge you will have a moment to discuss what was hard\")), mdx(\"hr\", null), mdx(\"h3\", null, \"American Standard Code for Information Interchange (ASCII)\"), mdx(\"p\", null, \"Take a look at the ASCII character character\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.ibm.com/support/knowledgecenter/en/SSLTBW_2.3.0/com.ibm.zos.v2r3.ioaq100/ascii_table.gif\",\n    \"alt\": \"ASCII Chart\"\n  }))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"How is it similar / different than what you came up with? \")), mdx(\"hr\", null), mdx(\"h2\", null, \"Wrap-up\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"An interesting point of this lesson is that sometimes when representing information on a computer we can \\\"forget the bits\\\" even though we know that's how all information is being represented.\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When in today's lesson is it OK to \\\"forget the bits\\\"?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When or why did we need to remember that information is represented in bits? \")), mdx(\"hr\", null), mdx(\"h2\", null, \"Wrap-up (continued)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Binary and decimal numbers can be converted back and forth\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It's usually easier to think of representing other things, like characters, as decimal numbers first. We ignore the underlying detail that the decimal number needs to be converted to bits (binary) to actually send on a computer.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We usually only think about the underlying binary representation when we have to. For example if we have a 6-bit system we know we only can represent 64 unique patterns. If we need more characters we'll need more bits.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Something that allows us to hide or forget underlying details is called an abstraction. Today we were sending text to each other but we know under the hood that means we're just sending electrical symbols back and forth. All the different layers we've explored in this chapter (binary numbers, decimal numbers, letters) allow us to ignore or hide the complexity of sending electric symbols. This makes it easy to quickly create systems like you did today and feel confident the underlying system will work.\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"matchPath":"/slides/unit-1/lesson-7/*","isCreatedByStatefulCreatePages":false,"id":"c6481366-b4e1-55d1-950e-0c568461188f","slug":"/principles/slides/unit-1/lesson-7","title":"Sending Text"}}}