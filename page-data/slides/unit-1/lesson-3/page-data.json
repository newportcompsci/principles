{"componentChunkName":"component---node-modules-gatsby-theme-mdx-deck-src-templates-deck-js","path":"/slides/unit-1/lesson-3","matchPath":"/slides/unit-1/lesson-3/*","webpackCompilationHash":"d76375e46ab9876ce8db","result":{"data":{"deck":{"id":"345d7af5-a450-5d85-b755-fc28e74ed325","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = slideTheme;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Sending Binary Messages with the Internet Simulator\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Vocabulary\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Protocol\"), \": A set of rules governing the exchange or transmission of data between devices.\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For our purposes today a \\\"protocol\\\" is simply a set of rules about sending, receiving and interpreting binary messages.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Bit\"), \": A contraction of \\\"Binary Digit\\\"; the single unit of information in a computer, typically represented as a 0 or 1\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We will call each element of a binary message a bit. \\\"Bit\\\" is short for binary digit. So for example if you have a binary message A B B A, we would say that is a 4-bit message.\")))), mdx(\"hr\", null), mdx(\"h2\", null, \"Flashlight Test\"), mdx(\"p\", null, \"\\\"Imagine that you and your friend have made a binary signaling protocol using a flashlight. The light on is state A, off is state B.\\\"\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.google.com/presentation/d/1juvbxu1begVxgiVcGMHsGv4QuunxdHFJwT-TVR8wZuc/edit#slide=id.g12976fcfcc_0_71\"\n  }), \"Flashlight Test\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Test 1\"), mdx(\"p\", null, \"\\\"Your friend sends you this message. What is being signaled here? Write down what you think the message is.\\\"\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Discuss with your neighbor what you think the message is\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Test 2\"), mdx(\"p\", null, \"\\\"Uh oh! Your friend realizes she actually made a mistake encoding the message from before and decides to re-send the message. Decode this new version of the message and write it down.\\\"\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Discuss with your neighbor what you think the message is\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Discussion\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Did this new message make you think about your answer to the first question? Do you want to change your answer to the first question?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"What assumptions did you make in interpreting these messages?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Is this protocol specific enough to allow useful communication of a binary message? If not what information would need to be added to it?\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Code.org\"), mdx(\"p\", null, \"Navigate to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://code.org\"\n  }), \"Code.org\"), \", create an account, and wait for further instructions\"), mdx(\"hr\", null), mdx(\"h2\", null, \"The Internet Simulator\"), mdx(\"p\", null, \"Get into groups of two and each of you need to navigate to Unit 1 Lesson 3 and start up the internet simulator. \"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"I'm going to give you around 5 minutes to explore this tool and see what you can friend\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note\"), \" You cannot break this so don't be afraid to explore\")), mdx(\"hr\", null), mdx(\"h2\", null, \"How does it work?\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://youtu.be/Kn6Fd5uwZno\"\n  }), \"Internet Simulator Video\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Developing a Protocol\"), mdx(\"p\", null, \"You and your partner need to design a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"protocol\"), \" for sending a sequence of bits back and forth to each other\"), mdx(\"p\", null, \"Start out with 2-bits and see if you can work your way up to 8-bits. \"), mdx(\"p\", null, \"Your protocol \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"MUST\"), \" recieve bits and send the same bits back.\"), mdx(\"hr\", null), mdx(\"h2\", null, \"The 2-bit Message Challenge\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Each initial sender should be able to confirm that the message was received correctly and resent because the message that they have received is the same as the original.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"As students iterate and perfect their protocol, they should try to extend their protocol to send more bits or send them more quickly, while maintaining accuracy. When each group has a working protocol and has time to practice (~10 minutes), have an all-class showdown to see who can do it the fastest\")), mdx(\"hr\", null), mdx(\"h3\", null, \"Rules:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Student pairs can decide who sends first.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Teacher reveals sequence of bits to be sent. Partner A of each group may enter this sequence of bits into Internet Simulator but may not begin sending them.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Teacher will say \\u201CGO\\u201D and partners will exchange messages.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"During the challenge students may not communicate with one another. (Note: feel free to put partners on opposite sides of a room or in separate rooms altogether.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Students yell \\u201CSTOP\\u201D once they have completed their exchange.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Teacher will verify that each partner received what the other sent by checking outgoing and incoming messages.\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Wrap-up\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.youtube.com/watch?v=ZhEf7e4kopM\"\n  }), \"The Internet: Wires, Cables, and WiFi\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Discussion\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How has today\\u2019s activity added to or altered your definition of a bit?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A major focus of today\\u2019s activity was timing and coordination. What things did you need to coordinate or agree about ahead of time in order for your protocol to work?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"What is the best bit rate you were able to achieve? What would it take to go faster?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How fast do you think computers transmit bits?\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"matchPath":"/slides/unit-1/lesson-3/*","isCreatedByStatefulCreatePages":false,"id":"345d7af5-a450-5d85-b755-fc28e74ed325","slug":"/principles/slides/unit-1/lesson-3","title":"Sending Binary Messages with the Internet Simulator"}}}