{"componentChunkName":"component---node-modules-gatsby-theme-mdx-deck-src-templates-deck-js","path":"/principles/slides/unit-1/lesson-4/print","webpackCompilationHash":"933a9a4ad8072c76371f","result":{"data":{"deck":{"id":"7158a4fa-b2cc-55df-9957-c502563da895","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = slideTheme;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Number Systems\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Getting Started\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"In your notebook or on a piece of paper,\\nwrite down as many ways as you can think of\\nto represent the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"number 7\"))), mdx(\"hr\", null), mdx(\"h2\", null, \"Circle-Triangle-Square Activity\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Challenge 1\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Using the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"shapes\"), \" given to you and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"three\"), \" places to work with: \")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Record all of the unique 3-place patterns you can find on your worksheet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How many did you find? \")), mdx(\"hr\", null), mdx(\"h2\", null, \"Challenge 2\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Now that you have found all of the 3-place patterns your task is:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To determine a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"systematic\"), \" way to generate all the patterns \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Write\"), \" your rules on the worksheet \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make sure your rules are clear and easy to read\")))), mdx(\"hr\", null), mdx(\"h2\", null, \"Challenge 2B\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Once you have your rules, trade your rules with another team.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Follow your new rules \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"exactly\"), \" how they are written, were you able to generate all of the possible combinations? \")), mdx(\"hr\", null), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://code.org/curriculum/docs/csp/U1L06-numberSystemsExplanation.png\",\n    \"alt\": \"Number System\"\n  }))), mdx(\"hr\", null), mdx(\"h2\", null, \"Wrap-Up\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"You just made a Number System!\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Were some sets of rules easier to use than others? If so what do you think led to this difference?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Do you think there are any limits to the number of symbols we could use to represent numbers? \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"What if we only had two symbols? What about 10? \")), mdx(\"hr\", null), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://studio.code.org/s/csp1/stage/5/puzzle/2\"\n  }), \"Binary Odometer\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"7158a4fa-b2cc-55df-9957-c502563da895","slug":"/principles/slides/unit-1/lesson-4","title":"Number Systems"}}}