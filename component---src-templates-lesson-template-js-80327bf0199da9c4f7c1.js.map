{"version":3,"sources":["webpack:///./src/templates/lesson-template.js","webpack:///./src/components/BaseLink.jsx","webpack:///./src/components/Navbar.jsx","webpack:///./src/components/Footer.jsx","webpack:///./src/components/BaseStyle.jsx","webpack:///./src/components/Layout.jsx","webpack:///./src/components/Card.jsx","webpack:///./src/components/Grid.jsx"],"names":["Flex","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_2__","target","name","styles","__webpack_exports__","_ref","post","data","mdx","slidesComponent","_emotion_core__WEBPACK_IMPORTED_MODULE_3__","_components_Card__WEBPACK_IMPORTED_MODULE_9__","_components_BaseLink__WEBPACK_IMPORTED_MODULE_7__","to","path","react_icons_md__WEBPACK_IMPORTED_MODULE_11__","attachmentLinks","attachments","frontmatter","map","a","i","forceExternal","key","publicURL","download","_components_Layout__WEBPACK_IMPORTED_MODULE_6__","_components_Heading__WEBPACK_IMPORTED_MODULE_8__","level","title","style","marginBottom","gatsby_plugin_mdx__WEBPACK_IMPORTED_MODULE_5__","body","_components_Grid__WEBPACK_IMPORTED_MODULE_10__","query","Link","children","activeClassName","partiallyActive","_ref$forceExternal","other","_objectWithoutPropertiesLoose","internal","test","_emotion_core__WEBPACK_IMPORTED_MODULE_6__","_extends","href","gatsby__WEBPACK_IMPORTED_MODULE_9__","BaseLink","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_5__","props","theme","colors","black","primary","propTypes","PropTypes","string","isRequired","bool","rootStyles","MenuItem","styled_base_browser_esm","Menu","Navbar","render","navLinks","this","links","l","core_browser_esm","url","css","React","Component","white","FooterLink","styled","_templateObject","Footer","index_esm","emotionNormalize","googleFont","fonts","BaseStyle","LINKS","Main","Layout","header","emotion_theming_browser_esm","components_BaseStyle","components_Navbar","components_Footer","Card","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","GridLayout","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","cols","gap","number","defaultProps"],"mappings":"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","file":"component---src-templates-lesson-template-js-80327bf0199da9c4f7c1.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport styled from \"@emotion/styled\"\r\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\r\nimport Layout from \"../components/Layout\"\r\nimport BaseLink from \"../components/BaseLink\"\r\nimport Heading from \"../components/Heading\"\r\nimport Card from \"../components/Card\"\r\nimport Grid from \"../components/Grid\"\r\n\r\nimport { MdFileDownload, MdSlideshow } from \"react-icons/md\"\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n\r\n  svg {\r\n    font-size: 2em;\r\n    margin-right: 1em;\r\n  }\r\n`\r\n\r\nconst LessonTemplate = ({ data }) => {\r\n  const { mdx: post } = data\r\n\r\n  let slidesComponent = post.frontmatter.slides ? (\r\n    <Card>\r\n      <BaseLink to={`/slides${post.frontmatter.path}`}>\r\n        <Flex>\r\n          <MdSlideshow />\r\n          Slide Deck\r\n        </Flex>\r\n      </BaseLink>\r\n    </Card>\r\n  ) : null\r\n\r\n  let attachmentLinks = []\r\n\r\n  if (post.frontmatter.attachments) {\r\n    attachmentLinks = post.frontmatter.attachments.map((a, i) => (\r\n      <Card>\r\n        <BaseLink\r\n          forceExternal\r\n          key={`attachment-${i}`}\r\n          to={a.publicURL}\r\n          download\r\n        >\r\n          <Flex>\r\n            <MdFileDownload />\r\n            {a.name}\r\n          </Flex>\r\n        </BaseLink>\r\n      </Card>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <BaseLink to={post.frontmatter.path.replace(/\\/lesson-\\d+/, \"\")}>\r\n        &lt; Back To Unit Overview\r\n      </BaseLink>\r\n\r\n      <Heading level={1}>{post.frontmatter.title}</Heading>\r\n\r\n      <div style={{ marginBottom: \"3em\" }}>\r\n        <MDXRenderer>{post.body}</MDXRenderer>\r\n      </div>\r\n\r\n      {slidesComponent || attachmentLinks.length ? (\r\n        <div>\r\n          <Heading level={2}>Links / Downloads</Heading>\r\n          <Grid>\r\n            {slidesComponent}\r\n            {attachmentLinks}\r\n          </Grid>\r\n        </div>\r\n      ) : null}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default LessonTemplate\r\n\r\nexport const query = graphql`\r\n  query LessonByPath($path: String!) {\r\n    mdx(frontmatter: { path: { eq: $path } }) {\r\n      body\r\n      frontmatter {\r\n        path\r\n        start(formatString: \"MMMM DD, YYYY\")\r\n        title\r\n        attachments {\r\n          publicURL\r\n          name\r\n        }\r\n        slides\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"@emotion/styled\"\r\nimport { Link as GatsbyLink } from \"gatsby\"\r\n\r\nconst Link = ({\r\n  children,\r\n  to,\r\n  activeClassName,\r\n  partiallyActive,\r\n  forceExternal = false,\r\n  ...other\r\n}) => {\r\n  const internal = /^\\/(?!\\/)/.test(to)\r\n\r\n  if (forceExternal || !internal) {\r\n    return (\r\n      <a href={to} {...other}>\r\n        {children}\r\n      </a>\r\n    )\r\n  } else {\r\n    return (\r\n      <GatsbyLink\r\n        to={to}\r\n        activeClassName={activeClassName}\r\n        partiallyActive={partiallyActive}\r\n        {...other}\r\n      >\r\n        {children}\r\n      </GatsbyLink>\r\n    )\r\n  }\r\n}\r\n\r\nconst BaseLink = styled(Link)`\r\n  transition: all 0.3s;\r\n  color: ${props => props.theme.colors.black};\r\n\r\n  &:hover {\r\n    color: ${props => props.theme.colors.primary};\r\n    cursor: pointer;\r\n  }\r\n`\r\nBaseLink.propTypes = {\r\n  to: PropTypes.string.isRequired,\r\n  activeClassName: PropTypes.string,\r\n  partiallyActive: PropTypes.bool,\r\n  forceExternal: PropTypes.bool,\r\n}\r\n\r\nexport default BaseLink\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { css } from \"@emotion/core\"\r\nimport styled from \"@emotion/styled\"\r\nimport BaseLink from \"./BaseLink\"\r\n\r\nconst rootStyles = css`\r\n  box-shadow: 0 3px 2px rgba(0, 0, 0, 0.2);\r\n`\r\n\r\nconst MenuItem = styled.li`\r\n  padding: 1.5em;\r\n`\r\n\r\nconst Menu = styled.ul`\r\n  display: flex;\r\n  margin: 0;\r\n  justify-content: flex-end;\r\n  list-style-type: none;\r\n  padding: 0;\r\n`\r\n\r\nclass Navbar extends React.Component {\r\n  render() {\r\n    let navLinks = this.props.links.map(l => (\r\n      <BaseLink to={l.url} key={l.name}>\r\n        <MenuItem>{l.name}</MenuItem>\r\n      </BaseLink>\r\n    ))\r\n\r\n    return (\r\n      <nav css={rootStyles}>\r\n        <Menu>{navLinks}</Menu>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nNavbar.propTypes = {\r\n  links: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      url: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ),\r\n}\r\n\r\nexport default Navbar\r\n","import React from \"react\"\r\nimport { css } from \"@emotion/core\"\r\nimport BaseLink from \"./BaseLink\"\r\nimport { FaGithub } from \"react-icons/fa\"\r\nimport styled from \"@emotion/styled-base\"\r\n\r\nconst rootStyles = theme => css`\r\n  background-color: ${theme.colors.black};\r\n  color: ${theme.colors.white};\r\n  padding: 1em;\r\n  font-size: 2em;\r\n  text-align: center;\r\n`\r\n\r\nconst FooterLink = styled(BaseLink)`\r\n  color: ${props => props.theme.colors.white};\r\n`\r\n\r\nconst Footer = props => (\r\n  <footer css={rootStyles}>\r\n    <FooterLink to=\"https://github.com\">\r\n      <FaGithub />\r\n    </FooterLink>\r\n  </footer>\r\n)\r\n\r\nexport default Footer\r\n","import React from \"react\"\r\nimport { Global, css } from \"@emotion/core\"\r\nimport emotionNormalize from \"emotion-normalize\"\r\nimport { googleFont } from \"./theme\"\r\n\r\nconst rootStyles = theme => css`\r\n  ${emotionNormalize}\r\n\r\n  @import url(${googleFont}); \r\n\r\n  body, html {\r\n    font-size: 18px;\r\n    font-family: ${theme.fonts.body};\r\n    color: ${theme.colors.black};\r\n  }\r\n\r\n  * {\r\n    line-height: 1.5em;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  a {\r\n    color: ${theme.colors.black};\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst BaseStyle = () => <Global styles={rootStyles} />\r\n\r\nexport default BaseStyle\r\n","import React from \"react\"\r\nimport { ThemeProvider } from \"emotion-theming\"\r\nimport styled from \"@emotion/styled\"\r\n\r\nimport { theme } from \"./theme\"\r\nimport Navbar from \"./Navbar\"\r\nimport Footer from \"./Footer\"\r\nimport BaseStyle from \"./BaseStyle\"\r\n\r\nconst LINKS = [\r\n  {\r\n    name: \"Home\",\r\n    url: \"/\",\r\n  },\r\n  {\r\n    name: \"Units\",\r\n    url: \"/units\",\r\n  },\r\n  {\r\n    name: \"Syllabus\",\r\n    url: \"/syllabus\",\r\n  },\r\n]\r\n\r\nconst Main = styled.main`\r\n  max-width: 900px;\r\n  margin: auto;\r\n  min-height: 100vh;\r\n  margin-top: 2em;\r\n  padding: 1em;\r\n`\r\n\r\nconst Layout = ({ children, header }) => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <BaseStyle />\r\n\r\n      <Navbar links={LINKS} />\r\n      {header}\r\n      <Main>{children}</Main>\r\n      <Footer />\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport { css } from \"@emotion/core\"\r\n\r\nconst rootStyles = css`\r\n  padding: 1em;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n  border-radius: 1em;\r\n  height: 100%;\r\n`\r\n\r\nconst Card = ({ children }) => <div css={rootStyles}>{children}</div>\r\n\r\nexport default Card\r\n","import styled from \"@emotion/styled\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst GridLayout = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(${props => props.cols}, 1fr);\r\n  grid-column-gap: ${props => props.gap};\r\n  grid-row-gap: ${props => props.gap};\r\n\r\n  @media screen and (max-width: 800px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`\r\n\r\nGridLayout.propTypes = {\r\n  gap: PropTypes.string,\r\n  cols: PropTypes.number,\r\n}\r\n\r\nGridLayout.defaultProps = {\r\n  gap: \"1em\",\r\n  cols: 2,\r\n}\r\n\r\nexport default GridLayout\r\n"],"sourceRoot":""}